# Generated by Django 4.0.5 on 2022-06-23 12:58

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BoatDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boat_name', models.CharField(max_length=255)),
                ('boat_number', models.CharField(max_length=255)),
                ('created_at', models.IntegerField()),
                ('updated_at', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='BoatMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boat_member_name', models.CharField(max_length=255)),
                ('boat_member_role', models.CharField(max_length=255)),
                ('boat_member_salary', models.IntegerField()),
                ('created_at', models.IntegerField()),
                ('updated_at', models.IntegerField()),
                ('boat_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Salary.boatdetails')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile_numer', models.CharField(help_text='-> Phone number should be of 10 digits <br/> \n    -> Phone number must starts with either 9, 8, 7 or 6 <br/>\n    -> Should enter in this format: 9999955555\n    ', max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must start with either 9, 8, 7 or 6 and should enter in this format: 9999955555', regex='^[6-9]\\d{9}$')])),
                ('alternate_number', models.CharField(help_text='-> Phone number should be of 10 digits <br/> \n    -> Phone number must starts with either 9, 8, 7 or 6 <br/>\n    -> Should enter in this format: 9999955555\n    ', max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must start with either 9, 8, 7 or 6 and should enter in this format: 9999955555', regex='^[6-9]\\d{9}$')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('district', models.CharField(max_length=255)),
                ('otp', models.CharField(blank=True, max_length=4)),
                ('deviceType', models.CharField(choices=[('android', 'Android'), ('iphone', 'iphone')], default='ANDROID', max_length=10)),
                ('deviceToken', models.CharField(blank=True, max_length=255)),
                ('deviceName', models.CharField(blank=True, max_length=100)),
                ('deviceOs', models.CharField(blank=True, max_length=100)),
                ('deviceId', models.CharField(blank=True, max_length=100)),
                ('created_at', models.IntegerField()),
                ('updated_at', models.IntegerField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='WithdrawOfMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upar_amout', models.IntegerField()),
                ('created_at', models.IntegerField()),
                ('updated_at', models.IntegerField()),
                ('boat_member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Salary.boatmembers')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveOfMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_start_date', models.DateTimeField()),
                ('leave_end_last', models.DateTimeField()),
                ('boat_member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Salary.withdrawofmember')),
            ],
        ),
        migrations.AddField(
            model_name='boatdetails',
            name='owner_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL),
        ),
    ]
